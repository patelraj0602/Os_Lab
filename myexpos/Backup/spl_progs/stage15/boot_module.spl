// Loading resource manager module to memory.
loadi(40,53);
loadi(41,54);

// Loading device manager module to memory
loadi(48,61);
loadi(49,62);

// Loading the Scheduler Module into memory
loadi(50,63);
loadi(51,64);

// Loading the unused blocks of Module 9 for testing;
loadi(38,69);

// Loading the INT7 software interrupt service code.
loadi(16,29);
loadi(17,30); 

// Loading timer interrupt code
loadi(4, 17);
loadi(5, 18);

// For loading library code to memory
loadi(63,13);
loadi(64,14);

// For loading init code to memory
loadi(65,7);
loadi(66,8);

// For loading INT10 module to memory
loadi(22,35);
loadi(23,36);

// For loading exception handler routine to memory
loadi(2, 15);
loadi(3, 16);


// Setting up page table for Init process

PTBR = PAGE_TABLE_BASE+20;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";


// Loading a brand new user process. I will be loading it into module 9

PTBR = PAGE_TABLE_BASE+40;
PTLR = 10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 83;
[PTBR+5] = "0110";
[PTBR+6] = 84;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 38;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 85;
[PTBR+17] = "0110";
[PTBR+18] = 86;
[PTBR+19] = "0110";



// Making Entries in Process Table for init process
[PROCESS_TABLE + 16 + 1] = 1;								// PID
[PROCESS_TABLE + 16 + 11] = 80;								// User Page Area
[PROCESS_TABLE + 16 + 13] = 8*512;							// UPTR field
[PROCESS_TABLE + 16 + 12] = 0;								// KPRT field
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE+20;				// PTBR
[PROCESS_TABLE + 16 + 15] = 10;								// PTLR
[PROCESS_TABLE + 16 + 4] = CREATED;							// State

// Making Entries in Process Table for User Process(Module 9)
[PROCESS_TABLE + 32 + 1] = 2;								// PID
[PROCESS_TABLE + 32 + 11] = 87;								// User Page Area
[PROCESS_TABLE + 32 + 13] = 8*512;							// UPTR field
[PROCESS_TABLE + 32 + 12] = 0;								// KPRT field
[PROCESS_TABLE + 32 + 14] = PAGE_TABLE_BASE+40;				// PTBR
[PROCESS_TABLE + 32 + 15] = 10;								// PTLR
[PROCESS_TABLE + 32 + 4] = CREATED;							// State


// Setting entry point for init process to the top of stack.
[76 * 512] = [65 * 512 + 1];

// Setting entry point for new user process(Module 9) to the top of stack.
[85 * 512] = [38 * 512 + 1];

// Setting the state field of all the other entries of process table to terminated.
alias current R0;
current = 3;
while(current <= 15) do
	[PROCESS_TABLE + (16 * current) + 4] = TERMINATED;
	current = current + 1;
endwhile;

// Initializing the status field in the terminal status table to 0
[TERMINAL_STATUS_TABLE] = 0;

return;
